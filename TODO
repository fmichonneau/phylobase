
# MEDIUM: tasks in the categories "basic functionality"
#  for Jan 1
=======================================================
* Check in general for completeness (i.e. replacement functions),
   obvious bugs
* Plotting:
   - plotting scrambles order of internal nodes
      (if we can't fix this we at least need a big warning --
       maybe even an error if show.node.label=TRUE for phylo4d??)
   - error in plotting a subsetted tree: see tests/plottest.R

# MAYBE for Jan 1:
==============================
* multiPhylo (see below)
* data class: check and incorporate into phylo4d
* incorporate ioNCL?? (see below)

# for Jan 21
=======================================================
* options
   - phylo.compat: default=TRUE, allows accessing internal
     phylo4 elements with $ and $<-
   - check.data defaults
   - cf implementations in other packages (e.g. bbmle)
* rooting
    - implement re-rooting
    - check with Sidlauskas: is there an "infelicity" in the
     way ape does it that we should modify?
* order: All phylo4 edge matrices are internally stored as 
    "cladewise"/Newick traversal order.  Extend edges accessor
    method with optional argument that allows edges to be extracted in a
    different order (possibly with an attribute as in ape); need to steal
   'reorder' from ape, extend for phylo4d keeping track of traits
   Also see ape::ladderize
* root node data characteristics (compare what OUCH does):
    root node doesn't have corresponding entry in the edge matrix: 
    ouch adds a row to the edge matrix (1-row data frame matching 
    node column info)
    Not entirely clear how we should deal with this, MB has a proposal.
* tree walking/generic manipulation methods
  - compare: Mesquite, ape (check O'Meara list)
  - compare Sidlauskas wiki page
   https://www.nescent.org/wg_phyloinformatics/R_Hackathon/DataTreeManipulation
   and make sure all of these can be done with phylobase
  - geiger: prune.extinct.taxa, prune.random.taxa?
  - allDescend to give internal nodes as well as tips?
  - decide on a coherent numbers/names policy


# MEDIUM but open-ended/vague/design decisions
=======
* make sure the data structures are reasonably complete
* Rewrite methods in native phylo4 as necessary/desirable [????]
* Figure out best way to deal with namespace/conflicts (overriding ape methods)
   - synch with newest ape release:
      - is multi.tree now multiPhylo?
      - is nTips persisting?
* fuzzy matching options in check_data?
("fuzzywarn" for fuzzy matching with warning,
  "fuzzy" for fuzzy matching w/o warning (perhaps not a good
  idea to even allow this?))
* implement NAMESPACE??


## I/O
------
* integrate ioNCL package

## Multiphylo
--------------------
* extend classes: should we have both 
     multiPhylo4 (no data) and multiPhylo4d (with data)  [DONE]
* Implement multiphylo tree names? [DONE]
* need multiPhylo! "unpack"/"pack" methods
   (convert multiPhylo4x to list of phylo4x, convert list of phylo4x to multiPhylo4x)
* ctree method
* need all basic methods
* later: trackObjs approach for large sets of trees?

# LOW PRIORITY
==============
* TreeLib wrapper?
* more tree manipulation methods
* lapply/multiple-tree methods, or at least documentation on how to do it
* compare Sidlauskas wiki documentation, how would one do it in phylo4?
* phylo4 constructor should have its own method manpage (currently is inside the class doc)  FIXED (we think)

