
R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## RUnit script obtained from:
> ##   http://wiki.r-project.org/rwiki/doku.php?id=developers:runit
> 
> ## unit tests will not be done if RUnit is not available
> if(require("RUnit", quietly=TRUE)) {
+  
+   ## --- Setup ---
+  
+   pkg <- "phylobase"
+   if(Sys.getenv("RCMDCHECK") == "FALSE") {
+     ## Path to unit tests for standalone running under Makefile (not R CMD check)
+     ## PKG/tests/../inst/unitTests
+     path <- file.path(getwd(), "..", "inst", "unitTests")
+   } else {
+     ## Path to unit tests for R CMD check
+     ## PKG.Rcheck/tests/../PKG/unitTests
+     path <- system.file(package=pkg, "unitTests")
+   }
+   cat("\nRunning unit tests\n")
+   print(list(pkg=pkg, getwd=getwd(), pathToUnitTests=path))
+  
+   library(package=pkg, character.only=TRUE)
+  
+   ## If desired, load the name space to allow testing of private functions
+   ## if (is.element(pkg, loadedNamespaces()))
+   ##     attach(loadNamespace(pkg), name=paste("namespace", pkg, sep=":"), pos=3)
+   ##
+   ## or simply call PKG:::myPrivateFunction() in tests
+  
+   ## --- Testing ---
+  
+   ## Define tests
+   testSuite <- defineTestSuite(name=paste(pkg, "unit testing"),
+                                           dirs=path)
+   ## Run
+   tests <- runTestSuite(testSuite)
+  
+   ## Default report name
+   pathReport <- file.path(path, "report")
+  
+   ## Report to stdout and text files
+   cat("------------------- UNIT TEST SUMMARY ---------------------\n\n")
+   printTextProtocol(tests, showDetails=FALSE)
+   printTextProtocol(tests, showDetails=FALSE,
+                     fileName=paste(pathReport, "Summary.txt", sep=""))
+   printTextProtocol(tests, showDetails=TRUE,
+                     fileName=paste(pathReport, ".txt", sep=""))
+  
+   ## Report to HTML file
+   printHTMLProtocol(tests, fileName=paste(pathReport, ".html", sep=""))
+  
+   ## Return stop() to cause R CMD check stop in case of
+   ##  - failures i.e. FALSE to unit tests or
+   ##  - errors i.e. R errors
+   tmp <- getErrors(tests)
+   if(tmp$nFail > 0 | tmp$nErr > 0) {
+     stop(paste("\n\nunit testing failed (#test failures: ", tmp$nFail,
+                ", #R errors: ",  tmp$nErr, ")\n\n", sep=""))
+   }
+ } else {
+   warning("cannot run unit tests -- package RUnit is not available")
+ }

Running unit tests
$pkg
[1] "phylobase"

$getwd
[1] "/home/francois/R-dev/phylobase/pkg/tests"

$pathToUnitTests
[1] "/home/francois/.R/library/phylobase/unitTests"

Loading required package: grid
Loading required package: ape
Loading required package: Rcpp

Attaching package: 'phylobase'

The following object(s) are masked from 'package:ape':

    edges



Executing test function test.checkTree  ... storing read block: TAXA
Error in readNCL(file = file, simplify = simplify, type = type, char.all = char.all,  : 
  Unknown taxon D s strain  in TRANSLATE command.
The translate key 2 has NOT been added to the translation table!
 done successfully.



Executing test function test.phylo4d.matrix  ...  done successfully.



Executing test function test.phylo4d.phylo  ...  done successfully.



Executing test function test.phylo4d.phylo4  ... Error in formatData(phy = x, dt = tip.data, type = "tip", ...) : 
  The following nodes are not found in the dataset:  t1, t2, t3, t4, t5
In addition: Warning messages:
1: In checkTree(object) : Labels are not unique
2: In checkTree(object) : Labels are not unique
Error in formatData(phy = x, dt = node.data, type = "internal", ...) : 
  Your node data are being matched to tip nodes. Make sure that your data identifiers are correct.
 done successfully.



Executing test function test.phylo4d.phylo4d  ... Error in phylo4d(phyd) : 
  Your object is already a phylo4d object. If you want to modify the data attached to it look at the help for tdata()<-
 done successfully.



Executing test function test.phylo4.matrix  ... Error in .createLabels(value = tip.label, ntips = ntips, nnodes = nnodes,  : 
  Number of labels does not match number of nodes.
Error in .createLabels(node.label, ntips = ntips, nnodes = nnodes, type = "internal") : 
  Number of labels does not match number of nodes.
Error in .local(x, ...) : 
  unknown order: allowed values are unknown,preorder,postorder,pruningwise,cladewise
Error in checkSlotAssignment(object, name, value) : 
  assignment of an object of class "character" is not valid for slot "annote" in an object of class "phylo4"; is(value, "list") is not TRUE
 done successfully.



Executing test function test.phylo4.phylo  ... Error in .local(x, ...) : Labels are not unique
Error in .local(x, ...) : Labels are not unique
 done successfully.



Executing test function test.formatData  ... Error in formatData(phy.alt, phy.alt) : 
  phy.alt must be a vector, factor, matrix, or data frame
Error : label.column %in% 1:ncol(dt) is not TRUE
Error : label.column %in% names(dt) is not TRUE
Error in formatData(phy.alt, data.frame(a = 1:5, row.names = c(rev(lab.tip)[1:3],  : 
  The following nodes are not found in the dataset:  t1, t2
Error in formatData(phy.alt, data.frame(a = 1:5, lab = c(rev(lab.tip)[1:3],  : 
  The following nodes are not found in the dataset:  t1, t2
Error in formatData(phy.alt, data.frame(a = 1:5, row.names = 4:8), type = "tip") : 
  Your tip data are being matched to internal nodes. Make sure that your data identifiers are correct.
Error in formatData(phy.alt, data.frame(a = 6:9, row.names = 1:4), type = "internal") : 
  Your node data are being matched to tip nodes. Make sure that your data identifiers are correct.
Error in formatData(phy.alt, data.frame(a = 1:3), type = "tip") : 
  The following nodes are not found in the dataset:  t4, t5
Error in formatData(phy.alt, data.frame(a = 1:3), type = "tip", missing.data = "fail") : 
  The following nodes are not found in the dataset:  t4, t5
Error in formatData(phy.alt, data.frame(a = 1:3), type = "tip", missing.data = "warn") : 
  (converted from warning) The following nodes are not found in the dataset:  t4, t5
Error in formatData(phy.alt, data.frame(a = 1:3), type = "tip", missing.data = "fail") : 
  The following nodes are not found in the dataset:  t4, t5
Error in formatData(phy.alt, data.frame(a = 0:5, row.names = 0:5), type = "tip",  : 
  (converted from warning) The following names are not found in the tree:  0
Error in formatData(phy.alt, data.frame(a = 0:5, row.names = 0:5), type = "tip") : 
  (converted from warning) The following names are not found in the tree:  0
 done successfully.



Executing test function test.formatDataWithDup  ... [1] 10
<environment: 0x20e0660>
Error in formatData(phy.dup, phy.dup) : 
  phy.dup must be a vector, factor, matrix, or data frame
Error in formatData(phy.dup, data.frame(a = 1:5, row.names = c(rev(lab.tip)[1:3],  : 
  The following nodes are not found in the dataset:  t1, t1
Error in formatData(phy.dup, data.frame(a = 1:5, lab = c(rev(lab.tip)[1:3],  : 
  The following nodes are not found in the dataset:  t1, t1
Error in formatData(phy.dup, data.frame(a = 1:5, row.names = 4:8), type = "tip") : 
  Your tip data are being matched to internal nodes. Make sure that your data identifiers are correct.
Error in formatData(phy.dup, data.frame(a = 6:9, row.names = 1:4), type = "internal") : 
  Your node data are being matched to tip nodes. Make sure that your data identifiers are correct.
Error in formatData(phy.dup, data.frame(a = 1:3), type = "tip") : 
  The following nodes are not found in the dataset:  t4, t5
Error in formatData(phy.dup, data.frame(a = 1:3), type = "tip", missing.data = "fail") : 
  The following nodes are not found in the dataset:  t4, t5
Error in formatData(phy.dup, data.frame(a = 1:3), type = "tip", missing.data = "warn") : 
  (converted from warning) The following nodes are not found in the dataset:  t4, t5
Error in formatData(phy.dup, data.frame(a = 1:3), type = "tip", missing.data = "fail") : 
  The following nodes are not found in the dataset:  t4, t5
Error in formatData(phy.dup, data.frame(a = 0:5, row.names = 0:5), type = "tip",  : 
  (converted from warning) The following names are not found in the tree:  0
Error in formatData(phy.dup, data.frame(a = 0:5, row.names = 0:5), type = "tip") : 
  (converted from warning) The following names are not found in the tree:  0
 done successfully.



Executing test function test.reorder.phylo  ...  done successfully.



Executing test function test.addData.phylo4  ...  done successfully.



Executing test function test.addData.phylo4d  ...  done successfully.



Executing test function test.hasNodeData.phylo4d  ...  done successfully.



Executing test function test.na.omit.phylo4d  ...  done successfully.



Executing test function test.nData  ...  done successfully.



Executing test function test.nodeData.phylo4d  ...  done successfully.



Executing test function test.Replace.nodeData.phylo4d  ...  done successfully.



Executing test function test.Replace.tdata.phylo4d  ...  done successfully.



Executing test function test.Replace.tipData.phylo4d  ...  done successfully.



Executing test function test.summary.phylo4d  ...  done successfully.



Executing test function test.tdata.phylo4d  ...  done successfully.



Executing test function test.tipData.phylo4d  ...  done successfully.



Executing test function test.edgeId.phylo4  ...  done successfully.



Executing test function test.edgeLabels.phylo4  ...  done successfully.



Executing test function test.edgeLength.phylo4  ...  done successfully.



Executing test function test.edgeOrder.phylo4  ...  done successfully.



Executing test function test.edges.phylo4  ...  done successfully.



Executing test function test.hasEdgeLabels.phylo4  ...  done successfully.



Executing test function test.hasEdgeLength.phylo4  ...  done successfully.



Executing test function test.hasNodeLabels.phylo4  ...  done successfully.



Executing test function test.head.phylo4  ...  done successfully.



Executing test function test.isRooted.phylo4  ...  done successfully.



Executing test function test.labels.phylo4  ...  done successfully.



Executing test function test.names.phylo4  ...  done successfully.



Executing test function test.nEdges.phylo4  ...  done successfully.



Executing test function test.nNodes.phylo4  ...  done successfully.



Executing test function test.nodeId.phylo4  ...  done successfully.



Executing test function test.nodeLabels.phylo4  ...  done successfully.



Executing test function test.nodeType.phylo4  ...  done successfully.



Executing test function test.nTips.ANY  ...  done successfully.



Executing test function test.nTips.phylo4  ...  done successfully.



Executing test function test.reorder.phylo4  ...  done successfully.



Executing test function test.Replace.edgeLabels.phylo4  ... Error in .createEdge(value, x@edge, type = "labels") : 
  Names provided don't match internal edge labels names.
Error in .createEdge(value, x@edge, type = "labels") : 
  Names provided don't match internal edge labels names.
 done successfully.



Executing test function test.Replace.edgeLength.phylo4  ... Error in .createEdge(value, x@edge, type = "lengths", use.names) : 
  Names provided don't match internal edge labels names.
Error in .createEdge(value, x@edge, type = "lengths", use.names) : 
  Names provided don't match internal edge labels names.
Error in .local(x, ..., value = value) : NAs in edge lengths
 done successfully.



Executing test function test.Replace.labels.phylo4  ... Error in `labels<-`(`*tmp*`, value = structure(c("t2", "t2", "t3", "t4",  : 
  Labels are not unique
Error in `labels<-`(`*tmp*`, value = structure(c("t1", "t2", "t3", "t4",  : 
  Labels are not unique
Error in .createLabels(value, nTips(x), nNodes(x), use.names, type = type) : 
  Number of labels does not match number of nodes.
Error in .createLabels(value, nTips(x), nNodes(x), use.names, type = type) : 
  Number of labels does not match number of nodes.
 done successfully.



Executing test function test.Replace.nodeLabels.phylo4  ... Error in `labels<-`(`*tmp*`, type = "internal", ..., value = structure(c("n7",  : 
  Labels are not unique
Error in .createLabels(value, nTips(x), nNodes(x), use.names, type = type) : 
  Number of labels does not match number of nodes.
Error in .createLabels(value, nTips(x), nNodes(x), use.names, type = type) : 
  Number of labels does not match number of nodes.
 done successfully.



Executing test function test.Replace.rootNode.phylo4  ...  done successfully.



Executing test function test.Replace.tipLabels.phylo4  ... Error in `labels<-`(`*tmp*`, type = "tip", ..., value = structure(c("t2",  : 
  Labels are not unique
Error in .createLabels(value, nTips(x), nNodes(x), use.names, type = type) : 
  Number of labels does not match number of nodes.
Error in .createLabels(value, nTips(x), nNodes(x), use.names, type = type) : 
  Number of labels does not match number of nodes.
 done successfully.



Executing test function test.rootNode.phylo4  ...  done successfully.



Executing test function test.sumEdgeLength.phylo4  ...  done successfully.



Executing test function test.summary.phylo4  ...  done successfully.



Executing test function test.tail.phylo4  ...  done successfully.



Executing test function test.tipLabels.phylo4  ...  done successfully.



Executing test function test.assign.pdata  ...  done successfully.



Executing test function test.check_pdata  ...  done successfully.



Executing test function test.extract.pdata  ...  done successfully.



Executing test function test.pdata  ...  done successfully.



Executing test function test.plot.pdata  ...  done successfully.



Executing test function test..genlab  ...  done successfully.



Executing test function test.phylobase.options  ... Error in match.arg(foo, c("warn", "fail", "ok")) : 
  'arg' should be one of “warn”, “fail”, “ok”
Error in phylobase.options(1) : invalid argument: ‘1’
Error in phylobase.options(foobar = "foo") : 
  Option name invalid: ‘foobar’
 done successfully.



Executing test function test.prune.phylo4  ...  done successfully.



Executing test function test.prune.phylo4d  ...  done successfully.



Executing test function test.readNCL  ... 
Warning:  
 A TAXA block should be read before the TREES block (but no TAXA block was found).  Taxa will be inferred from their usage in the TREES block.
at line 8, column (approximately) 9 (file position 217)
storing implied block: TAXA
storing read block: TREES

Warning:  
 A TAXA block should be read before the TREES block (but no TAXA block was found).  Taxa will be inferred from their usage in the TREES block.
at line 8, column (approximately) 9 (file position 217)
storing implied block: TAXA
storing read block: TREES

Warning:  
 A TAXA block should be read before the TREES block (but no TAXA block was found).  Taxa will be inferred from their usage in the TREES block.
at line 8, column (approximately) 9 (file position 217)
storing implied block: TAXA
storing read block: TREES
Error in .local(x, ...) : Labels are not unique
In addition: Warning messages:
1: In FUN(X[[2L]], ...) :
  Could not use value "asdata" for check.node.labels because there are no labels associated with the tree
2: In FUN(X[[2L]], ...) :
  Could not use value "asdata" for check.node.labels because there are no labels associated with the tree

Warning:  
 A TAXA block should be read before the TREES block (but no TAXA block was found).  Taxa will be inferred from their usage in the TREES block.
at line 8, column (approximately) 9 (file position 217)
storing implied block: TAXA
storing read block: TREES

Warning:  
 A TAXA block should be read before the TREES block (but no TAXA block was found).  Taxa will be inferred from their usage in the TREES block.
at line 8, column (approximately) 9 (file position 217)
storing implied block: TAXA
storing read block: TREES

Warning:  
 A TAXA block should be read before the TREES block (but no TAXA block was found).  Taxa will be inferred from their usage in the TREES block.
at line 5, column (approximately) 1 (file position 37)
storing implied block: TAXA
storing read block: TREES
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
Error in `levels<-.factor`(`*tmp*`, value = c("test2A", "test2B")) : 
  number of levels differs
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
Error in `levels<-.factor`(`*tmp*`, value = c("test2A", "test2B")) : 
  number of levels differs
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
Error in `levels<-.factor`(`*tmp*`, value = c("test2A", "test2B")) : 
  number of levels differs
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
Error in `levels<-.factor`(`*tmp*`, value = c("test2A", "test2B")) : 
  number of levels differs
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITE
storing read block: BROWNIE
Error in readNCL(file = "foo.bar") : 
  "foo.bar" does not refer to a valid file.
In addition: Warning message:
In rm(ExContDataFile) : object 'ExContDataFile' not found
storing read block: TAXA
storing read block: TREES
storing read block: CHARACTERS
Error in readNCL(file = noStateLabels, return.labels = TRUE) : 
  (converted from warning) state labels are missing for 'char1', the option return.labels is thus ignored.
storing read block: TAXA
storing read block: TREES
storing read block: CHARACTERS

Warning:  
 A TAXA block should be read before the TREES block (but no TAXA block was found).  Taxa will be inferred from their usage in the TREES block.
at line 1, column (approximately) 20 (file position 19)
storing implied block: TAXA
storing read block: TREES

Warning:  
 A TAXA block should be read before the TREES block (but no TAXA block was found).  Taxa will be inferred from their usage in the TREES block.
at line 1, column (approximately) 20 (file position 19)
storing implied block: TAXA
storing read block: TREES

Warning:  
 A TAXA block should be read before the TREES block (but no TAXA block was found).  Taxa will be inferred from their usage in the TREES block.
at line 1, column (approximately) 20 (file position 19)
storing implied block: TAXA
storing read block: TREES

Warning:  
 A TAXA block should be read before the TREES block (but no TAXA block was found).  Taxa will be inferred from their usage in the TREES block.
at line 1, column (approximately) 20 (file position 19)
storing implied block: TAXA
storing read block: TREES

Warning:  
 A TAXA block should be read before the TREES block (but no TAXA block was found).  Taxa will be inferred from their usage in the TREES block.
at line 1, column (approximately) 20 (file position 19)
storing implied block: TAXA
storing read block: TREES

Warning:  
 A TAXA block should be read before the TREES block (but no TAXA block was found).  Taxa will be inferred from their usage in the TREES block.
at line 1, column (approximately) 20 (file position 19)
storing implied block: TAXA
storing read block: TREES
 done successfully.



Executing test function test.readNexus  ... 
Warning:  
 A TAXA block should be read before the TREES block (but no TAXA block was found).  Taxa will be inferred from their usage in the TREES block.
at line 8, column (approximately) 9 (file position 217)
storing implied block: TAXA
storing read block: TREES

Warning:  
 A TAXA block should be read before the TREES block (but no TAXA block was found).  Taxa will be inferred from their usage in the TREES block.
at line 8, column (approximately) 9 (file position 217)
storing implied block: TAXA
storing read block: TREES

Warning:  
 A TAXA block should be read before the TREES block (but no TAXA block was found).  Taxa will be inferred from their usage in the TREES block.
at line 8, column (approximately) 9 (file position 217)
storing implied block: TAXA
storing read block: TREES
Error in .local(x, ...) : Labels are not unique
In addition: Warning messages:
1: In readNCL(file = noStateLabels, type = "data", return.labels = TRUE) :
  state labels are missing for 'char1', the option return.labels is thus ignored.
2: In readNCL(file = noStateLabels, type = "data", return.labels = TRUE) :
  state labels are missing for 'char2', the option return.labels is thus ignored.
3: In readNCL(file = noStateLabels, type = "data", return.labels = TRUE) :
  state labels are missing for 'char3', the option return.labels is thus ignored.
4: In FUN(X[[2L]], ...) :
  Could not use value "asdata" for check.node.labels because there are no labels associated with the tree
5: In FUN(X[[2L]], ...) :
  Could not use value "asdata" for check.node.labels because there are no labels associated with the tree

Warning:  
 A TAXA block should be read before the TREES block (but no TAXA block was found).  Taxa will be inferred from their usage in the TREES block.
at line 8, column (approximately) 9 (file position 217)
storing implied block: TAXA
storing read block: TREES

Warning:  
 A TAXA block should be read before the TREES block (but no TAXA block was found).  Taxa will be inferred from their usage in the TREES block.
at line 8, column (approximately) 9 (file position 217)
storing implied block: TAXA
storing read block: TREES

Warning:  
 A TAXA block should be read before the TREES block (but no TAXA block was found).  Taxa will be inferred from their usage in the TREES block.
at line 5, column (approximately) 1 (file position 37)
storing implied block: TAXA
storing read block: TREES
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
Error in `levels<-.factor`(`*tmp*`, value = c("test2A", "test2B")) : 
  number of levels differs
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
Error in `levels<-.factor`(`*tmp*`, value = c("test2A", "test2B")) : 
  number of levels differs
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
Error in `levels<-.factor`(`*tmp*`, value = c("test2A", "test2B")) : 
  number of levels differs
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
Error in `levels<-.factor`(`*tmp*`, value = c("test2A", "test2B")) : 
  number of levels differs
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITECHARMODELS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITE
storing read block: BROWNIE
storing read block: TAXA
storing read block: CHARACTERS
storing read block: CHARACTERS
storing read block: TREES
storing read block: ASSUMPTIONS
storing read block: MESQUITE
storing read block: BROWNIE
 done successfully.



Executing test function test.multiPhylo4.As.multiPhylo  ...  done successfully.



Executing test function test.multiPhylo.As.multiPhylo4  ...  done successfully.



Executing test function test.phylo4.As.data.frame  ...  done successfully.



Executing test function test.phylo4.As.phylo  ... Error in asMethod(object) : 
  (converted from warning) trees with unknown order may be unsafe in ape
In addition: Warning message:
In rm(ExContDataFile) : object 'ExContDataFile' not found
 done successfully.



Executing test function test.phylo4.As.phylog  ...  done successfully.



Executing test function test.phylo4d.As.phylo  ... Error in asMethod(object) : 
  (converted from warning) losing data while coercing phylo4d to phylo
In addition: Warning messages:
1: In asMethod(object) : trees with unknown order may be unsafe in ape
2: In asMethod(object) : losing data while coercing phylo4d to phylo
3: In asMethod(object) : trees with unknown order may be unsafe in ape
Error in asMethod(object) : 
  (converted from warning) losing data while coercing phylo4d to phylo
In addition: Warning message:
In asMethod(object) : losing data while coercing phylo4d to phylo
 done successfully.



Executing test function test.phylo4ToDataFrame  ...  done successfully.



Executing test function test.phylo.As.phylo4  ...  done successfully.



Executing test function test.phylo.As.phylo4d  ...  done successfully.



Executing test function test.extractTree  ...  done successfully.



Executing test function test.subset.phylo4  ... Error in .local(x, ...) : 0 or 1 tips would remain after subsetting
In addition: Warning messages:
1: In asMethod(object) : losing data while coercing phylo4d to phylo
2: In asMethod(object) : trees with unknown order may be unsafe in ape
3: In asMethod(object) : losing data while coercing phylo4d to phylo
4: In asMethod(object) : trees with unknown order may be unsafe in ape
Error in .local(x, ...) : 0 or 1 tips would remain after subsetting
In addition: Warning message:
In .local(x, ...) : invalid nodes ignored: t999
Error in .local(x, ...) : 0 or 1 tips would remain after subsetting
In addition: Warning message:
In .local(x, ...) : invalid nodes ignored: t999
Error in subset(phyd, tips.include = "t1", tips.exclude = "t3") : 
  error in evaluating the argument 'x' in selecting a method for function 'subset'
 done successfully.



Executing test function test.subset.phylo4d  ... Error in .local(x, ...) : 0 or 1 tips would remain after subsetting
Error in .local(x, ...) : 0 or 1 tips would remain after subsetting
In addition: Warning message:
In .local(x, ...) : invalid nodes ignored: t999
Error in .local(x, ...) : 0 or 1 tips would remain after subsetting
In addition: Warning message:
In .local(x, ...) : invalid nodes ignored: t999
 done successfully.



Executing test function test.tbind  ...  done successfully.



Executing test function test..bubLegendGrob  ...  done successfully.



Executing test function test.drawDetails.bubLegend  ...  done successfully.



Executing test function test.phylobubbles  ...  done successfully.



Executing test function test.phyloXXYY  ...  done successfully.



Executing test function test.plotOneTree  ...  done successfully.



Executing test function test.plot.phylo4  ...  done successfully.



Executing test function test.tip.data.plot  ...  done successfully.



Executing test function test.treePlot  ...  done successfully.



Executing test function test.hasPoly  ...  done successfully.



Executing test function test.hasRetic  ...  done successfully.



Executing test function test.hasSingle  ...  done successfully.



Executing test function test.ancestor  ...  done successfully.



Executing test function test.ancestors  ...  done successfully.



Executing test function test.children  ...  done successfully.



Executing test function test.descendants  ...  done successfully.



Executing test function test.getEdge  ... Error in getEdge(phy.alt, c("x", "y", "z"), missing = "fail") : 
  Not all nodes are descendants in this tree: x, y, z
Error in getEdge(phy, c(-9, 0, 50), missing = "fail") : 
  Not all nodes are descendants in this tree: -9, 0, 50
Error in getNode(x, node, missing = "OK") : 
  Node must be a vector of class 'integer' or 'character'.
Error in getEdge(phy.alt, c("x", "y", "z"), missing = "fail") : 
  Not all nodes are descendants in this tree: x, y, z
Error in getEdge(phy.alt, c("t1", "t3"), type = "ancestor", missing = "fail") : 
  Not all nodes are ancestors in this tree: t1, t3
Error in getEdge(phy.alt, c(-9, 0, 50), missing = "fail") : 
  Not all nodes are descendants in this tree: -9, 0, 50
Error in getEdge(phy.alt, c(1, 3), type = "ancestor", missing = "fail") : 
  Not all nodes are ancestors in this tree: 1, 3
 done successfully.



Executing test function test.getNode  ... Error in getNode(phytr, c("xxx", "yyy"), missing = "fail") : 
  Some nodes not found among all nodes in tree: xxx, yyy
Error in getNode(phytr, c(-9, 0, 50), missing = "fail") : 
  Some nodes not found among all nodes in tree: -9, 0, 50
Error in getNode(phytr, 1.5) : 
  Node must be a vector of class 'integer' or 'character'.
 done successfully.



Executing test function test.MRCA  ...  done successfully.



Executing test function test.shortestPath  ...  done successfully.



Executing test function test.siblings  ...  done successfully.

------------------- UNIT TEST SUMMARY ---------------------

RUNIT TEST PROTOCOL -- Tue Nov 23 20:27:56 2010 
*********************************************** 
Number of test functions: 97 
Number of errors: 0 
Number of failures: 0 

 
1 Test Suite : 
phylobase unit testing - 97 test functions, 0 errors, 0 failures
> 
> proc.time()
   user  system elapsed 
  11.48    0.14   11.65 
