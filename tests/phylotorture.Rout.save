
R version 3.0.3 (2014-03-06) -- "Warm Puppy"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## torture-testing phylo4 objects.
> require(phylobase)
Loading required package: phylobase
Warning message:
In library(package, lib.loc = lib.loc, character.only = TRUE, logical.return = TRUE,  :
  there is no package called ‘phylobase’
> require(ape)
Loading required package: ape
Warning message:
In library(package, lib.loc = lib.loc, character.only = TRUE, logical.return = TRUE,  :
  there is no package called ‘ape’
> set.seed(1001)
> p1 <- list()
> n <- 10
> ## don't want to slow down R CMD check by doing this every time:
> ## n <- 10000
> for (i in 1:n) {
+ ##    e2 <- c(sample(1:5,replace=FALSE,size=5),sample(6:10,replace=FALSE,size=5))
+ ##    e1 <- sample(6:10,replace=TRUE
+     e <- matrix(sample(1:10,replace=TRUE,size=10),ncol=2)
+     p1[[i]] <- try(phylo4(e),silent=TRUE)
+ }
> OKvals <- sapply(p1, class) != "try-error"
> ## table(sapply(p1[!OKvals], as.character)) # I think this is causing issues with
> ##  R check because of different width of terminal/output, trying something simpler:
> message(unique(sapply(p1[!OKvals], as.character)))
Error in try(phylo4(e), silent = TRUE) : could not find function "phylo4"

> 
> if (any(OKvals)) {
+     p2 <- p1[OKvals]
+     length(p2)
+     has.poly <- sapply(p2,hasPoly)
+     has.sing <- sapply(p2,hasSingle)
+     has.retic <- sapply(p2,hasRetic)   
+     ##
+     if (any(has.sing)) {
+         p4 <- p2[has.sing]
+         plot(p4[[1]])  ## gives descriptive error
+         t2 <- try(plot(collapse.singles(as(p2[[1]],"phylo"))))
+         ## "incorrect number of dimensions"
+     }
+     if (any(!has.sing)) {
+         ## first tree without singles -- HANGS!
+         ## don't try the plot in an R session you care about ...
+         p3 <- p2[!has.sing]
+         ## plot(p2[[13]])
+     }
+ }
> 
> ## elements 8 and 34 are 
> ## what SHOULD the rules for trees be?
> 
> ## (a) reduce node numbers to 1 ... N ?
> ## (b) check: irreducible, non-cyclic, ... ?
> 
> ## convert to matrix format for checking?
> 
> reduce_nodenums <- function(e) {
+     matrix(as.numeric(factor(e)),ncol=2)
+ }
> 
> # make an illegal phylo4 object, does it pass checks?
> # a disconnected node:
> 
> t1 <- read.tree (text="((a,b), (c,(d, e)));")
Error: could not find function "read.tree"
Execution halted
